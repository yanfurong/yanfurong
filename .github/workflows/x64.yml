#=================================================
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: P3TERX
# Blog: https://p3terx.com
#=================================================

name: Build OpenWrt

on:
  repository_dispatch:
  release:
    types: published
  push:
    branches:
      - master
    paths:
      - '.config'
#  schedule:
#    - cron: 0 8 * * 5
#  watch:
#    types: started

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: .config
  DIY_P1_SH: diy-part1.sh
  DIY_P2_SH: diy-part2.sh
  SSH_ACTIONS: false
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_COWTRANSFER: false
  UPLOAD_WETRANSFER: false
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-18.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-1804)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: Clone source code
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: Update feeds
      run: |
        cd openwrt
        sed -i 's/\"#src-git\"/\"src-git\"/g' ./feeds.conf.default
        sed -i 's/192.168.1.1/192.168.2.55/g' package/base-files/files/bin/config_generate
        sed -i 's/OpenWrt/HP GEN8/g' package/base-files/files/bin/config_generate
        sed -i '$a src-git lienol https://github.com/Lienol/openwrt-package' feeds.conf.default
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        
    - name: Install Luci for Clash
      working-directory: ./openwrt
      run: |
        cd package
        git clone https://github.com/frainzy1477/luci-app-clash
                 
    - name: Generate configuration file
      working-directory: ./openwrt
      run:
        rm -f ./.config*
        touch ./.config
        cat >> .config <<EOF
        CONFIG_TARGET_x86=y
        CONFIG_TARGET_x86_64=y
        CONFIG_TARGET_x86_64_Generic=y
        EOF
        cat >> .config <<EOF
        CONFIG_NFS_KERNEL_SERVER_V4=y
        CONFIG_PACKAGE_kmod-crypto-cts=y
        CONFIG_PACKAGE_kmod-dax=y
        CONFIG_PACKAGE_kmod-dm=y
        CONFIG_PACKAGE_kmod-dnsresolver=y
        CONFIG_PACKAGE_kmod-fs-exportfs=y
        CONFIG_PACKAGE_kmod-fs-nfs-common-rpcsec=y
        CONFIG_PACKAGE_kmod-fs-nfs=y
        CONFIG_PACKAGE_kmod-fs-nfs-common=y
        CONFIG_PACKAGE_kmod-fs-nfs-v3=y
        CONFIG_PACKAGE_kmod-fs-nfs-v4=y
        CONFIG_PACKAGE_kmod-fs-nfsd=y
        CONFIG_PACKAGE_libdevmapper=y
        CONFIG_PACKAGE_libkeyutils=y
        CONFIG_PACKAGE_libtirpc=y
        CONFIG_PACKAGE_libwrap=y
        CONFIG_PACKAGE_nfs-kernel-server=y
        CONFIG_PACKAGE_nfs-kernel-server-utils=y
        CONFIG_PACKAGE_nfs-utils-libs=y
        CONFIG_PACKAGE_rpcbind=y
        CONFIG_PACKAGE_yaaw=y
        CONFIG_RPCBIND_LIBWRAP=y
        CONFIG_RPCBIND_RMTCALLS=y
        CONFIG_PACKAGE_openssh-sftp-server=y          
        EOF
        cat >> .config <<EOF
        CONFIG_PACKAGE_kmod-usb-ohci=y
        CONFIG_PACKAGE_kmod-usb-ohci-pci=y
        CONFIG_PACKAGE_kmod-usb2=y
        CONFIG_PACKAGE_kmod-usb2-pci=y
        CONFIG_PACKAGE_kmod-usb3=y
        CONFIG_PACKAGE_kmod-b44=y
        CONFIG_PACKAGE_kmod-phy-broadcom=y
        CONFIG_PACKAGE_kmod-phylib-broadcom=y
        CONFIG_PACKAGE_kmod-ssb=y
        CONFIG_PACKAGE_kmod-tg3=y
        CONFIG_PACKAGE_cifsmount=y
        CONFIG_PACKAGE_kmod-fs-cifs=y
        CONFIG_PACKAGE_nfs-utils=y
        EOF
        cat >> .config <<EOF     
        CONFIG_PACKAGE_luci-app-aria2=y
        CONFIG_PACKAGE_luci-app-arpbind=y
        CONFIG_PACKAGE_luci-app-autoreboot=y
        CONFIG_PACKAGE_luci-app-ddns=y
        CONFIG_PACKAGE_luci-app-filetransfer=y
        CONFIG_PACKAGE_luci-app-firewall=y
        CONFIG_PACKAGE_luci-app-flowoffload=y
        CONFIG_PACKAGE_luci-app-hd-idle=y
        CONFIG_PACKAGE_luci-app-ipsec-vpnd=y
        CONFIG_PACKAGE_luci-app-minidlna=y
        CONFIG_PACKAGE_luci-app-nlbwmon=y
        CONFIG_PACKAGE_luci-app-openvpn-server=y
        CONFIG_PACKAGE_luci-app-passwall=y
        CONFIG_PACKAGE_luci-app-passwall_INCLUDE_ipt2socks=y
        CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Shadowsocks=y
        CONFIG_PACKAGE_luci-app-passwall_INCLUDE_ShadowsocksR=y
        CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Shadowsocks_socks=y
        CONFIG_PACKAGE_luci-app-passwall_INCLUDE_ShadowsocksR_socks=y
        CONFIG_PACKAGE_luci-app-passwall_INCLUDE_V2ray=y
        CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Trojan=y
        CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Brook=y
        CONFIG_PACKAGE_luci-app-passwall_INCLUDE_haproxy=y
        CONFIG_PACKAGE_luci-app-passwall_INCLUDE_ChinaDNS_NG=y
        CONFIG_PACKAGE_luci-app-passwall_INCLUDE_pdnsd=y
        CONFIG_PACKAGE_luci-app-passwall_INCLUDE_dns2socks=y
        CONFIG_PACKAGE_luci-app-passwall_INCLUDE_v2ray-plugin=y
        CONFIG_PACKAGE_luci-app-passwall_INCLUDE_simple-obfs=y
        CONFIG_PACKAGE_luci-app-ramfree=y
        CONFIG_PACKAGE_luci-app-samba=y 
        CONFIG_PACKAGE_luci-app-smartdns=y
        CONFIG_PACKAGE_luci-app-ssr-plus=y
        CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Shadowsocks=y
        CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Simple_obfs=y
        CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_V2ray_plugin=y
        CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_V2ray=y
        CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Trojan=y
        CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Redsocks2=y
        CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_DNS2SOCKS=y
        CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_ShadowsocksR_Socks=y
        CONFIG_PACKAGE_luci-app-ssr-python-pro-server=y
        CONFIG_PACKAGE_luci-app-usb-printer=y
        CONFIG_PACKAGE_luci-app-v2ray-server=y
        CONFIG_PACKAGE_luci-app-vlmcsd=y
        CONFIG_PACKAGE_luci-app-wol=y
        CONFIG_PACKAGE_luci-app-openclash=y
        CONFIG_PACKAGE_luci-app-airplay2=y
        CONFIG_PACKAGE_luci-app-clash=y
        EOF
        cat >> .config <<EOF
        CONFIG_PACKAGE_luci-theme-bootstrap=y
        EOF
        cat >> .config <<EOF
        CONFIG_PACKAGE_curl=y
        CONFIG_PACKAGE_htop=y
        CONFIG_PACKAGE_nano=y
        CONFIG_PACKAGE_screen=y
        CONFIG_PACKAGE_tree=y
        CONFIG_PACKAGE_vim-fuller=y
        CONFIG_PACKAGE_wget=y
        CONFIG_PACKAGE_blkid=y
        CONFIG_PACKAGE_hd-idle=y
        CONFIG_PACKAGE_iperf3=y
        CONFIG_PACKAGE_mount-utils=y
        CONFIG_PACKAGE_e2fsprogs=y
        CONFIG_PACKAGE_automount=y
        CONFIG_PACKAGE_autosamba=y
        CONFIG_PACKAGE_fdisk=y
        CONFIG_PACKAGE_e2fsprogs=y
        CONFIG_PACKAGE_shadowsocksr-libev-server=y
        EOF
        make defconfig

    - name: Download package
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile the firmware
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 || make -j1 V=s
        echo "::set-output name=status::success"
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "::set-env name=DEVICE_NAME::_$(cat DEVICE_NAME)"
        echo "::set-env name=FILE_DATE::_$(date +"%Y%m%d%H%M")"

    - name: Check space usage
      if: (!cancelled())
      run: df -hT

    - name: Upload bin directory
      uses: actions/upload-artifact@master
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: OpenWrt_bin${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: openwrt/bin

    - name: Organize files
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages
        echo "::set-env name=FIRMWARE::$PWD"
        echo "::set-output name=status::success"

    - name: Upload firmware directory
      uses: actions/upload-artifact@master
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWrt_firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}
